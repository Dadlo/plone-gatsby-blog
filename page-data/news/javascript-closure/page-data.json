{"componentChunkName":"component---src-templates-default-js","path":"/news/javascript-closure/","webpackCompilationHash":"3d001b50dd6dfd09a80f","result":{"data":{"ploneDocument":null,"ploneEvent":null,"ploneFolder":null,"ploneNewsItem":{"id":"http://b856bc3a.ngrok.io/Plone/news/javascript-closure","title":"Javascript: Closure","description":"Closures","created":"October 15th, 2019","text":{"react":"[{\"type\":\"p\",\"props\":{\"children\":[\"\\\"A closure is the combination of a function bundled together (enclosed) with references to its surrounding state (the lexical environment)\\\".\",{\"type\":\"br\",\"props\":{\"children\":null}},\"Source: https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-closure-b2f0d2152b36\"]}},{\"type\":\"p\",\"props\":{\"children\":[{\"type\":\"br\",\"props\":{\"children\":null}},\"A closure it nothing more than a function with access to the variables from another function's scope.\"]}},{\"type\":\"p\",\"props\":{\"children\":[\"That is done by creating a function inside another one.\",{\"type\":\"br\",\"props\":{\"children\":null}},\"The inner function has access to the outer one scope.\"]}},{\"type\":\"p\",\"props\":{\"children\":[\"Even after the outer function is called, the outer scope will not be destroyed if the inner is referenced.\"]}},{\"type\":\"p\",\"props\":{\"children\":[\"This way, that scope is accessible only, by the inner function, crearing data protection.\"]}},{\"type\":\"p\",\"props\":{\"children\":[\"All changes to the outer scope variables will persist and be shown on each subsequent call.\"]}},{\"type\":\"p\",\"props\":{\"children\":[\"Highlights:\",{\"type\":\"br\",\"props\":{\"children\":null}},\"- Closure are inner functions inside outer functions with access to the outer scope;\",{\"type\":\"br\",\"props\":{\"children\":null}},\"- The outer scope is not destroyed while the reference for the inner function exists;\",{\"type\":\"br\",\"props\":{\"children\":null}},\"- The outer scope variables changes will persist to subsequent call.\"]}},{\"type\":\"p\",\"props\":{\"children\":[\"Why is it important?\",{\"type\":\"br\",\"props\":{\"children\":null}},\"- To store private data (not only a private convention like the underscore suffix)\",{\"type\":\"br\",\"props\":{\"children\":null}},\"- To build iterators\",{\"type\":\"br\",\"props\":{\"children\":null}},\"- To implement Singleton (single instance of an object while execution of the problem) -> Just have a nameless outer function in order not to be called directly.\"]}}]"},"_path":"/news/javascript-closure/"},"allPloneFile":{"edges":[]},"allPloneImage":{"edges":[]},"ploneBreadcrumbs":{"items":[{"_id":"http://b856bc3a.ngrok.io/Plone/news","_path":"/news/","title":"News"},{"_id":"http://b856bc3a.ngrok.io/Plone/news/javascript-closure","_path":"/news/javascript-closure/","title":"Javascript: Closure"}]}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}